from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from states import QualificationStates

router = Router()

# Create welcome keyboard
welcome_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ù–∞—á–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="start_qualification"),
        ],
        [
            InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/lootpay_support_bot"),
        ]
    ]
)

# Create keyboard for question 1
q1_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞–º–∏", callback_data="q1_games"),
        ],
        [
            InlineKeyboardButton(text="‚ú® –í–Ω—É—Ç—Ä—è—à–∫–∞–º–∏ (—Å–∫–∏–Ω—ã, –ø—å—é—Ä–æ—á–∫–∏, –∫–µ–π—Å—ã)", callback_data="q1_items"),
        ],
        [
            InlineKeyboardButton(text="üö´ –ù–∏—á–µ–≥–æ –Ω–µ –±–µ—Ä—É", callback_data="q1_nothing"),
        ],
        [
            InlineKeyboardButton(text="üì¥ –ù–µ —é–∑–∞—é –°—Ç–∏–º", callback_data="q1_no_steam"),
        ]
    ]
)

# Create keyboard for question 2
q2_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üëç –î–∞, —é–∑–∞—é", callback_data="q2_yes"),
        ],
        [
            InlineKeyboardButton(text="üëé –î–∞, –Ω–æ –∑–∞–±—Ä–æ—Å–∏–ª(–∞)", callback_data="q2_past"),
        ],
        [
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="q2_no"),
        ]
    ]
)

# Create keyboard for question 3
q3_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, –æ–∫", callback_data="q3_ok"),
        ],
        [
            InlineKeyboardButton(text="üá¨üáß –Ø –∏–∑ –ë—Ä–∏—Ç–∞–Ω–∏–∏", callback_data="q3_uk"),
        ],
        [
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –Ω–µ –≤ —Ç–µ–º—É", callback_data="q3_no"),
        ]
    ]
)

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """Handle the /start command and show welcome message"""
    # Clear any existing state
    await state.clear()
    
    welcome_text = (
        "<b>–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ LootPay!</b><br>"
        "–ë–æ—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è Steam‚Äë–∫–æ—à–µ–ª—å–∫–∞ üöÄ<br><br>"
        "<i>–í—Å–µ–≥–æ 5 –º–∏–Ω—É—Ç, –∏ –±–∞–ª–∞–Ω—Å –≤ Steam –ø–æ–ø–æ–ª–Ω–µ–Ω...</i><br>"
        "–ê –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ ‚Äî –¥–æ–ª–≥–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è, —Å–∫—Ä—ã—Ç—ã–µ –Ω–∞—Ü–µ–Ω–∫–∏ –∏ —Ç—Ä–µ–≤–æ–≥–∞, —á—Ç–æ —Å—Ä–µ–¥—Å—Ç–≤–∞ –Ω–µ –¥–æ–π–¥—É—Ç. –ó–Ω–∞–∫–æ–º–æ?<br><br>"
        "‚ú® <b>–° LootPay —Ç–∞–∫–æ–≥–æ –Ω–µ –±—É–¥–µ—Ç.</b> ‚ú®<br><br>"
        "<b>–ü–æ–ø–æ–ª–Ω—è–π Steam –∑–∞ 15 –º–∏–Ω—É—Ç</b><br>"
        "—Å —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π, —á–µ—Å—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º –∏ –±–µ–∑ —Ä–∏—Å–∫–∞ –±—ã—Ç—å –æ–±–º–∞–Ω—É—Ç—ã–º ‚è±Ô∏è<br><br>"
        "üîπ <b>–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è</b> ‚Äî –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –Ω–∞—Ü–µ–Ω–æ–∫<br>"
        "üîπ <b>–ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞</b> –ø—Ä–∏ —Å–±–æ—è—Ö<br>"
        "üîπ <b>–ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7</b><br><br>"
        "üí≥ <i>–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ –æ—Ç</i> <b>100 ‚ÇΩ</b><br>"
        "<i>‚Äî –ª—é–±—ã–µ –†–§‚Äë–∫–∞—Ä—Ç—ã –∏–ª–∏ –°–ë–ü</i><br><br>"
        "<hr><br>"
        "<b>–ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç?</b><br><br>"
        "1Ô∏è‚É£ <i>–ó–∞–ø—É—Å—Ç–∏ –±–æ—Ç–∞, –≤–∫–ª—é—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è, –≤–≤–µ–¥–∏ Steam ID</i><br>"
        "2Ô∏è‚É£ <i>–í—ã–±–µ—Ä–∏ —Å—É–º–º—É –∏ –æ–ø–ª–∞—Ç–∏ —á–µ—Ä–µ–∑ –°–ë–ü</i><br>"
        "3Ô∏è‚É£ <i>–ü–æ–ª—É—á–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞—á–∏—Å–ª–µ–Ω–∏–∏</i> üéâ<br><br>"
        "<hr><br>"
        "<b>–ü–æ–ø–æ–ª–Ω—è–π –±–µ–∑ —Ä–∏—Å–∫–∞ –∏ –æ–±–º–∞–Ω–∞ ‚Äî –≤–º–µ—Å—Ç–µ —Å LootPay!</b> üéÆ"
    )
    await message.answer(welcome_text, reply_markup=welcome_keyboard, parse_mode="HTML")

@router.callback_query(F.data == "start_qualification")
async def start_qualification(callback: CallbackQuery, state: FSMContext):
    """Start the qualification process when user clicks '–ù–∞—á–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'"""
    await callback.message.edit_text(
        "–ù–∞ —á—Ç–æ —á–∞—â–µ –≤—Å–µ–≥–æ —Ç—Ä–∞—Ç–∏—à—å –¥–µ–Ω—å–≥–∏ –≤ Steam?",
        reply_markup=q1_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q1)

@router.callback_query(QualificationStates.waiting_for_q1)
async def process_q1(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 1"""
    await callback.message.edit_text(
        "–ü—Ä–æ–±–æ–≤–∞–ª(–∞) –¥—Ä—É–≥–∏–µ –ø–æ–ø–æ–ª–Ω—è–ª–∫–∏?",
        reply_markup=q2_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q2)

@router.callback_query(QualificationStates.waiting_for_q2)
async def process_q2(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 2"""
    await callback.message.edit_text(
        "–ú—ã –¥–µ–ª–∞–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ USD –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω (–∫—Ä–æ–º–µ UK) ‚Äî –≥—É–¥?",
        reply_markup=q3_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q3)

@router.callback_query(QualificationStates.waiting_for_q3)
async def process_q3(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 3 and show final message"""
    final_message = (
        "üéâ <b>–ö—Ä—É—Ç–æ, —Ç—ã –ø—Ä–æ—à—ë–ª –æ–ø—Ä–æ—Å!</b><br><br>"
        "üöÄ –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–¥–µ–ª–∏–ª—Å—è —Å–≤–æ–∏–º–∏ –ø—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è–º–∏ ‚Äî —ç—Ç–æ –ø–æ–º–æ–∂–µ—Ç –Ω–∞–º –¥–µ–ª–∞—Ç—å —Å–µ—Ä–≤–∏—Å –µ—â—ë —É–¥–æ–±–Ω–µ–µ.<br><br>"
        "<hr><br>"
        "–í–≤–µ–¥–∏—Ç–µ <b>–Ω–∏–∫–Ω–µ–π–º</b> —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Steam, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –ø–æ–ø–æ–ª–Ω—è—Ç—å.<br>"
        "‚ùóÔ∏è –ù–∏–∫–Ω–µ–π–º ‚â† –ª–æ–≥–∏–Ω. –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –º–æ–∂–Ω–æ <a href=\"https://telegra.ph/CHasto-zadavaemye-voprosy-pri-pokupke-04-09#%D0%98%D0%BC%D1%8F-%D0%B0%D0%BA%D0%BA%D0%B0%D1%83%D0%BD%D1%82%D0%B0-Steam---%D0%BA%D0%B0%D0%BA-%D0%BD%D0%B0%D0%B9%D1%82%D0%B8-?\">–∑–¥–µ—Å—å</a>"
    )
    await callback.message.edit_text(
        final_message,
        parse_mode="HTML",
        disable_web_page_preview=True
    )
    await state.clear() 