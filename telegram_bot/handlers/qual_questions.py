from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext

from states import QualificationStates

router = Router()

# Create welcome keyboard
welcome_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –ù–∞—á–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ", callback_data="start_qualification"),
        ],
        [
            InlineKeyboardButton(text="üÜò –ü–æ–¥–¥–µ—Ä–∂–∫–∞", url="https://t.me/lootpay_support_bot"),
        ]
    ]
)

# Create keyboard for question 1
q1_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üéÆ –ò–≥—Ä–∞–º–∏", callback_data="q1_games"),
        ],
        [
            InlineKeyboardButton(text="‚ú® –í–Ω—É—Ç—Ä—è—à–∫–∞–º–∏ (—Å–∫–∏–Ω—ã, –ø—å—é—Ä–æ—á–∫–∏, –∫–µ–π—Å—ã)", callback_data="q1_items"),
        ],
        [
            InlineKeyboardButton(text="üö´ –ù–∏—á–µ–≥–æ –Ω–µ –±–µ—Ä—É", callback_data="q1_nothing"),
        ],
        [
            InlineKeyboardButton(text="üì¥ –ù–µ —é–∑–∞—é –°—Ç–∏–º", callback_data="q1_no_steam"),
        ]
    ]
)

# Create keyboard for question 2
q2_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="üëç –î–∞, —é–∑–∞—é", callback_data="q2_yes"),
        ],
        [
            InlineKeyboardButton(text="üëé –î–∞, –Ω–æ –∑–∞–±—Ä–æ—Å–∏–ª(–∞)", callback_data="q2_past"),
        ],
        [
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç", callback_data="q2_no"),
        ]
    ]
)

# Create keyboard for question 3
q3_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [
            InlineKeyboardButton(text="‚úÖ –î–∞, –æ–∫", callback_data="q3_ok"),
        ],
        [
            InlineKeyboardButton(text="üá¨üáß –Ø –∏–∑ –ë—Ä–∏—Ç–∞–Ω–∏–∏", callback_data="q3_uk"),
        ],
        [
            InlineKeyboardButton(text="‚ùå –ù–µ—Ç, –Ω–µ –≤ —Ç–µ–º—É", callback_data="q3_no"),
        ]
    ]
)

@router.message(Command("start"))
async def cmd_start(message: Message, state: FSMContext):
    """Handle the /start command and show welcome message"""
    # Clear any existing state
    await state.clear()
    
    welcome_text = (
        "–ü—Ä–∏–≤–µ—Ç, —ç—Ç–æ LootPay!\n"
        "–ë–æ—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è Steam‚Äë–∫–æ—à–µ–ª—å–∫–∞ üöÄ\n\n"
        "–£—Å—Ç–∞–ª –æ—Ç –∑–∞–¥–µ—Ä–∂–µ–∫, —Å–∫—Ä—ã—Ç—ã—Ö –∫–æ–º–∏—Å—Å–∏–π –∏ —Å–∫–∞–º-—Å–µ—Ä–≤–∏—Å–æ–≤?\n"
        "LootPay ‚Äî —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ–π —Å–ø–æ—Å–æ–± –ø–æ–ø–æ–ª–Ω–∏—Ç—å –∫–æ—à–µ–ª—ë–∫ –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Ä–∏—Å–∫–æ–≤.\n\n"
        "–õ–µ–≥–∫–æ –ø–æ–ø–æ–ª–Ω—è–π Steam –∑–∞ 15 –º–∏–Ω—É—Ç —Å —É–¥–æ–±–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π, —á–µ—Å—Ç–Ω—ã–º –∫—É—Ä—Å–æ–º –∏ –±–µ–∑ —Ä–∏—Å–∫–∞ –±—ã—Ç—å –æ–±–º–∞–Ω—É—Ç—ã–º ‚è±Ô∏è\n\n"
        "‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è, –±–µ–∑ —Å–∫—Ä—ã—Ç—ã—Ö –Ω–∞—Ü–µ–Ω–æ–∫\n"
        "‚Ä¢ –ì–∞—Ä–∞–Ω—Ç–∏—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –ø—Ä–∏ —Å–±–æ—è—Ö\n"
        "‚Ä¢ –ü–æ–¥–¥–µ—Ä–∂–∫–∞ 24/7\n"
        "‚Ä¢ –°–∫–æ—Ä–æ: –∫—ç—à–±—ç–∫ –∑–∞ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è\n\n"
        "–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–∞—á–∏—Å–ª–µ–Ω–∏–µ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç –æ—Ç 100 ‚ÇΩ –ª—é–±—ã–º–∏ –†–§‚Äë–∫–∞—Ä—Ç–∞–º–∏ –∏–ª–∏ —á–µ—Ä–µ–∑ –°–ë–ü.\n\n"
        "–ü–æ–¥–¥–µ—Ä–∂–∫–∞ –±–æ—Ç–∞ ‚Äî @lootpay_support_bot.\n"
        "–ù–∞—Å–ª–∞–∂–¥–∞–π—Å—è –∏–≥—Ä–∞–º–∏ –≤ Steam –≤–º–µ—Å—Ç–µ —Å LootPay! üéÆ"
    )
    await message.answer(welcome_text, reply_markup=welcome_keyboard)

@router.callback_query(F.data == "start_qualification")
async def start_qualification(callback: CallbackQuery, state: FSMContext):
    """Start the qualification process when user clicks '–ù–∞—á–∞—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ'"""
    await callback.message.edit_text(
        "–ö—É–¥–∞ –æ–±—ã—á–Ω–æ –≤ –°—Ç–∏–º–µ —Å–ª–∏–≤–∞–µ—à—å –±–∞–±–ª–æ?",
        reply_markup=q1_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q1)

@router.callback_query(QualificationStates.waiting_for_q1)
async def process_q1(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 1"""
    await callback.message.edit_text(
        "–ü—Ä–æ–±–æ–≤–∞–ª(–∞) –¥—Ä—É–≥–∏–µ –ø–æ–ø–æ–ª–Ω—è–ª–∫–∏?",
        reply_markup=q2_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q2)

@router.callback_query(QualificationStates.waiting_for_q2)
async def process_q2(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 2"""
    await callback.message.edit_text(
        "–ú—ã –¥–µ–ª–∞–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤ USD –¥–ª—è –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω (–∫—Ä–æ–º–µ UK) ‚Äî –≥—É–¥?",
        reply_markup=q3_keyboard
    )
    await state.set_state(QualificationStates.waiting_for_q3)

@router.callback_query(QualificationStates.waiting_for_q3)
async def process_q3(callback: CallbackQuery, state: FSMContext):
    """Process answer to question 3 and show final message"""
    final_message = (
        "üéâ **–ö—Ä—É—Ç–æ, —Ç—ã –ø—Ä–æ—à—ë–ª –æ–ø—Ä–æ—Å!**\n\n"
        "üöÄ –ó–∞ —ç—Ç–æ —Ç–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫ ‚Äî –ø–µ—Ä–≤–æ–µ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ **–±–µ–∑ –∫–æ–º–∏—Å—Å–∏–∏**! –ú—ã –∑–∞ —ç—Ç–æ –≤ –æ—Ç–≤–µ—Ç–µ.\n"
        "üîÑ –î–∞–ª—å—à–µ –ø—Ä–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—á–∏—Ç—ã–≤–∞–π –∫–æ–º–∏—Å—Å–∏—é **8‚Äì10%** ‚Äî –≤—Å—ë —á–µ—Å—Ç–Ω–æ –∏ –ø—Ä–æ–∑—Ä–∞—á–Ω–æ.\n\n"
        "---\n\n"
        "–í–≤–µ–¥–∏—Ç–µ **–Ω–∏–∫–Ω–µ–π–º** —Å–≤–æ–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –≤ Steam, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –ø–æ–ø–æ–ª–Ω—è—Ç—å.\n"
        "‚ùóÔ∏è –ù–∏–∫–Ω–µ–π–º ‚â† –ª–æ–≥–∏–Ω. –£–∑–Ω–∞—Ç—å —Å–≤–æ–π –Ω–∏–∫–Ω–µ–π–º –º–æ–∂–Ω–æ [–∑–¥–µ—Å—å](https://telegra.ph/CHasto-zadavaemye-voprosy-pri-pokupke-04-09#%D0%98%D0%BC%D1%8F-%D0%B0%D0%BA%D0%BA%D0%B0%D1%83%D0%BD%D1%82%D0%B0-Steam---%D0%BA%D0%B0%D0%BA-%D0%BD%D0%B0%D0%B9%D1%82%D0%B8-?)"
    )
    await callback.message.edit_text(
        final_message,
        parse_mode="Markdown",
        disable_web_page_preview=True
    )
    await state.clear() 